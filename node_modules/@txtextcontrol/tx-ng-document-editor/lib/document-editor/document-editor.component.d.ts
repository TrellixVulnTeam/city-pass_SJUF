import { OnInit, ElementRef } from '@angular/core';
import { TXSettings } from "./tx-settings";
import * as ɵngcc0 from '@angular/core';
export declare class DocumentEditorComponent implements OnInit {
    private hostElement;
    containerDiv: ElementRef;
    private connectionID;
    constructor(hostElement: ElementRef);
    private static readonly DefaultSettings;
    width: string;
    height: string;
    documentTargetMarkers: boolean;
    backColor: string;
    statusBarColor: string;
    editMode: string;
    contextMenusEnabled: boolean;
    saveDocumentQuestionDialogEnabled: boolean;
    tableGridLines: boolean;
    textFrameMarkerLines: boolean;
    controlChars: boolean;
    textFieldsEditable: boolean;
    formattingPrinter: string;
    culture: string;
    uiCulture: string;
    userNames: string[];
    reconnectTimeout: number;
    webSocketURL: string;
    ngOnInit(): void;
    get settings(): TXSettings;
    private static readonly NO_CONFLICT_JS;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DocumentEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DocumentEditorComponent, "tx-document-editor", never, { "documentTargetMarkers": "documentTargetMarkers"; "backColor": "backColor"; "statusBarColor": "statusBarColor"; "editMode": "editMode"; "contextMenusEnabled": "contextMenusEnabled"; "saveDocumentQuestionDialogEnabled": "saveDocumentQuestionDialogEnabled"; "tableGridLines": "tableGridLines"; "textFrameMarkerLines": "textFrameMarkerLines"; "controlChars": "controlChars"; "textFieldsEditable": "textFieldsEditable"; "formattingPrinter": "formattingPrinter"; "culture": "culture"; "uiCulture": "uiCulture"; "userNames": "userNames"; "reconnectTimeout": "reconnectTimeout"; "webSocketURL": "webSocketURL"; "width": "width"; "height": "height"; }, {}, never, never>;
}

//# sourceMappingURL=document-editor.component.d.ts.map