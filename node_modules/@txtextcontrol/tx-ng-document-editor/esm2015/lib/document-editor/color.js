export class Color {
    constructor(r, g, b, a = 0xFF) {
        this.R = 0;
        this.G = 0;
        this.B = 0;
        this.A = 0xFF;
        this.R = r;
        this.G = g;
        this.B = b;
        this.A = a;
    }
    toHexString() {
        return `#${pad(this.R.toString(16))}${pad(this.G.toString(16))}${pad(this.B.toString(16))}`;
    }
    static fromHexString(value) {
        let r, g, b;
        if (!value || value[0] != '#' || (value.length != 7 && value.length != 4)) {
            throw new Error('String is not a hex color value.');
        }
        if (value.length === 7) {
            r = value.substring(1, 3);
            g = value.substring(3, 5);
            b = value.substring(5, 7);
            return new Color(parseInt(r, 16), parseInt(g, 16), parseInt(b, 16));
        }
        else {
            r = value[1];
            g = value[2];
            b = value[3];
            return new Color(parseInt(r + r, 16), parseInt(g + g, 16), parseInt(b + b, 16));
        }
    }
}
function pad(num, size = 2) {
    let result = num + '';
    while (result.length < size)
        result = '0' + result;
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90eC1uZy1kb2N1bWVudC1lZGl0b3Ivc3JjL2xpYi9kb2N1bWVudC1lZGl0b3IvY29sb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLEtBQUs7SUFNZixZQUFZLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUyxFQUFFLElBQVksSUFBSTtRQUx0RCxNQUFDLEdBQVcsQ0FBQyxDQUFDO1FBQ2QsTUFBQyxHQUFXLENBQUMsQ0FBQztRQUNkLE1BQUMsR0FBVyxDQUFDLENBQUM7UUFDZCxNQUFDLEdBQVcsSUFBSSxDQUFDO1FBR3JCLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDWCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNYLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVELFdBQVc7UUFDUixPQUFPLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQTtJQUM5RixDQUFDO0lBRU0sTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFhO1FBQ3RDLElBQUksQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLENBQUM7UUFFcEMsSUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsRUFBRTtZQUN4RSxNQUFNLElBQUksS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7U0FDdEQ7UUFFRCxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3JCLENBQUMsR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUMxQixDQUFDLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzFCLE9BQU8sSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN0RTthQUNJO1lBQ0YsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNiLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDYixDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2IsT0FBTyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ2xGO0lBQ0osQ0FBQztDQUNIO0FBRUQsU0FBUyxHQUFHLENBQUMsR0FBUSxFQUFFLE9BQWUsQ0FBQztJQUNwQyxJQUFJLE1BQU0sR0FBWSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQy9CLE9BQU8sTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJO1FBQUUsTUFBTSxHQUFHLEdBQUcsR0FBRyxNQUFNLENBQUM7SUFDbkQsT0FBTyxNQUFNLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBDb2xvciB7XHJcbiAgIHB1YmxpYyBSOiBudW1iZXIgPSAwO1xyXG4gICBwdWJsaWMgRzogbnVtYmVyID0gMDtcclxuICAgcHVibGljIEI6IG51bWJlciA9IDA7XHJcbiAgIHB1YmxpYyBBOiBudW1iZXIgPSAweEZGO1xyXG5cclxuICAgY29uc3RydWN0b3IocjogbnVtYmVyLCBnOiBudW1iZXIsIGI6IG51bWJlciwgYTogbnVtYmVyID0gMHhGRikge1xyXG4gICAgICB0aGlzLlIgPSByO1xyXG4gICAgICB0aGlzLkcgPSBnO1xyXG4gICAgICB0aGlzLkIgPSBiO1xyXG4gICAgICB0aGlzLkEgPSBhO1xyXG4gICB9XHJcblxyXG4gICB0b0hleFN0cmluZygpIDogc3RyaW5nIHtcclxuICAgICAgcmV0dXJuIGAjJHtwYWQodGhpcy5SLnRvU3RyaW5nKDE2KSl9JHtwYWQodGhpcy5HLnRvU3RyaW5nKDE2KSl9JHtwYWQodGhpcy5CLnRvU3RyaW5nKDE2KSl9YFxyXG4gICB9XHJcblxyXG4gICBwdWJsaWMgc3RhdGljIGZyb21IZXhTdHJpbmcodmFsdWU6IHN0cmluZykgOiBDb2xvciB7XHJcbiAgICAgIGxldCByOiBzdHJpbmcsIGc6IHN0cmluZywgYjogc3RyaW5nOyAgICAgICAgICAgIFxyXG5cclxuICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZVswXSAhPSAnIycgfHwgKHZhbHVlLmxlbmd0aCAhPSA3ICYmIHZhbHVlLmxlbmd0aCAhPSA0KSkge1xyXG4gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0cmluZyBpcyBub3QgYSBoZXggY29sb3IgdmFsdWUuJyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDcpIHtcclxuICAgICAgICAgciA9IHZhbHVlLnN1YnN0cmluZygxLCAzKTtcclxuICAgICAgICAgZyA9IHZhbHVlLnN1YnN0cmluZygzLCA1KTtcclxuICAgICAgICAgYiA9IHZhbHVlLnN1YnN0cmluZyg1LCA3KTtcclxuICAgICAgICAgcmV0dXJuIG5ldyBDb2xvcihwYXJzZUludChyLCAxNiksIHBhcnNlSW50KGcsIDE2KSwgcGFyc2VJbnQoYiwgMTYpKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlIHtcclxuICAgICAgICAgciA9IHZhbHVlWzFdO1xyXG4gICAgICAgICBnID0gdmFsdWVbMl07XHJcbiAgICAgICAgIGIgPSB2YWx1ZVszXTtcclxuICAgICAgICAgcmV0dXJuIG5ldyBDb2xvcihwYXJzZUludChyICsgciwgMTYpLCBwYXJzZUludChnICsgZywgMTYpLCBwYXJzZUludChiICsgYiwgMTYpKTtcclxuICAgICAgfVxyXG4gICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHBhZChudW06IGFueSwgc2l6ZTogbnVtYmVyID0gMikgOiBzdHJpbmcge1xyXG4gICBsZXQgcmVzdWx0IDogc3RyaW5nID0gbnVtICsgJyc7XHJcbiAgIHdoaWxlIChyZXN1bHQubGVuZ3RoIDwgc2l6ZSkgcmVzdWx0ID0gJzAnICsgcmVzdWx0O1xyXG4gICByZXR1cm4gcmVzdWx0O1xyXG59XHJcbiJdfQ==